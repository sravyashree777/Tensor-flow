---
title: Tensor flow probability
---
# Title {#Title}

## TensorFlow Probability

A Powerful Library for Probabilistic Modeling and Inference
---

# Introduction {#Introduction}

TensorFlow Probability (TFP) is an open-source software library on TensorFlow for probabilistic modeling and statistical inference. TFP provides powerful tools for probability distributions, uncertainty estimation, and Bayesian machine learning.

In conventional deep learning, models tend to produce deterministic predictions, where they provide one value without considering uncertainty. Yet in real-world domains such as finance, medicine, and robotics, uncertainty matters. TensorFlow Probability assists by making probabilistic reasoning possible, which enables models to provide estimates of confidence levels and make better-informed decisions.
---

# Installation & Setup {#Installation-Setup}
Install the latest version of TensorFlow Probability:
```py
pip install --upgrade tensorflow-probability
```
the other way to intall it is

## Install from source

```py
  sudo apt-get install bazel git python-pip
  python -m pip install --upgrade --user tf-nightly
  git clone https://github.com/tensorflow/probability.git
  cd probability
  bazel build --copt=-O3 --copt=-march=native :pip_pkg
  PKGDIR=$(mktemp -d)
  ./bazel-bin/pip_pkg $PKGDIR
  python -m pip install --upgrade --user $PKGDIR/*.whl
```
---

# Key Features & Explanation {#Key-Features-Explanation}

## 1.Probability Distributions

TFP provides extensive support for built-in probability distributions, such as:

* **Discrete Distributions:** Bernoulli, Categorical, Poisson

* **Continuous Distributions:** Normal (Gaussian), Exponential, Beta, Gamma

* **Multivariate Distributions:** Multivariate Normal, Dirichlet

**Uses:**
These distributions assist in the characterization of random variables, representation of uncertainties, and probabilistic calculations.

## 2. Bayesian Inference

Bayesian inference updates belief from data based on observations applying Bayes' Theorem. TFP makes available such tools as Bayesian Neural Networks (BNNs) to use in deep learning the uncertainty.

**Uses:** 
As opposed to other neural networks that yield point estimates, Bayesian models in TFP produce probability distributions over outcomes, enhancing decision-making in environments where there is uncertainty.

## 3. Markov Chain Monte Carlo (MCMC)

MCMC is a sampling algorithm for complex probability distributions. TFP offers fast implementations such as:

* Hamiltonian Monte Carlo (HMC)

* No-U-Turn Sampler (NUTS)

**Uses:** 
MCMC enables the estimation of posterior distributions if direct computation is not feasible, and thus it is a tool for Bayesian inference.
---

# Code Examples {#Code-Examples}


---

# Screenshots {#Screenshots}

---

# Use Cases {#Use-Cases}

---

# Conclusion {#Conclusion}

---

# References & Further Reading {#References-Further-Reading}

---
Quarto template Text!
